@use "sass:map";
@import "styles/variables";

/*
Sass Map syntax:
map.get( $colours, "pinkred" )
*/

:root {
	font-family: 'Roboto FlexVariable', arial, sans-serif;
	font-size: 1rem;
	font-weight: 400;
	font-variation-settings: 'wght' 400;
}

@media ( min-width:1536px ) {
	:root {
		font-size: 1.125rem;
  	}
}


* {
    box-sizing: border-box;
    scroll-behavior: smooth;
}  

html,
#___gatsby,
#gatsby-focus-wrapper {
	height: 100vh;
}

body {
	min-height: 100%;
    margin: 0;
    background-color: map.get( $colours, "yellow" );
	min-height: 100%;
    overflow-x: hidden;
    color: map.get( $colours, "black" );
}

/* screenreader friendly hiding */
.visuallyhidden {
	clip: rect(0 0 0 0); 
	clip-path: inset(50%);
	height: 1px;
	overflow: hidden;
	position: absolute;
	white-space: nowrap; 
	width: 1px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: 900;
	text-transform: uppercase;
	font-family: 'Roboto FlexVariable', Arial, sans-serif;
	font-variation-settings: 'wght' 900, 'wdth' 130;
}

h1,
h2 {
    margin-top: 0.5rem;
    margin-bottom: 1rem;
    line-height: 1.25em;

    @media(min-width: 1200px) {
        margin-bottom: 1.5rem;
    }
}

h3,
h4,
h5,
h6 {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
}

h1 {
    font-size: map.get( $fontsizes, "h1" );
}

h2 {
    font-size: map.get( $fontsizes, "h2" );
}

h3 {
  font-size: map.get( $fontsizes, "h3" );
}

h4 {
  font-size: map.get( $fontsizes, "h4" );
}

h5 {
  font-size: map.get( $fontsizes, "h5" );
}

h6 {
  font-size: map.get( $fontsizes, "h6" );
}

p {
    margin-top: 0.5rem;
    margin-bottom: 1rem;
}

b,
strong {
	font-weight: 700;
	font-variation-settings: 'wght' 700;
}

i {
  	font-style: italic;
	font-variation-settings: 'slnt' -10;
}

.underline {
  text-decoration: underline;
  text-underline-position: under;
  text-decoration-color: map.get( $colours, "pinkred" );
  text-decoration-thickness: 0.125rem;
}

hr,
ol,
ul,
blockquote {
  margin-top: calc(map.get( $spaces, "xxxl" ) / 2);
  margin-bottom: calc(map.get( $spaces, "xxxl" ) / 2);
}

hr {
  border: none; 
  height: 2px;
  background-color: map.get( $colours, "black" );
}

a {
  color: inherit;
  transition: color 0.3s ease;
  cursor: pointer;

  &:hover,
  &:focus {
    text-decoration: none;
  }
}

blockquote {
	margin-left: 0;
	border-top: map.get( $borders, "default" ) solid map.get( $colours, "pinkred" );
	border-bottom: map.get( $borders, "default" ) solid map.get( $colours, "pinkred" );
	padding: map.get( $spaces, "xxl" );
	text-align: center;
	font-size: map.get( $fontsizes, "h2" );
	font-weight: 700;
	font-style: italic;
	font-variation-settings: 'slnt' -10, 'wght' 700;

	& cite {
		font-size: map.get( $fontsizes, "h6" );
		font-weight: 400;
		font-variation-settings: 'slnt' -10, 'wght' 400;
	}
}

figure {
	margin: map.get( $spaces, "sm" );
}

figcaption {
	margin: 0 0 map.get( $spaces, "sm" );
	color: map.get( $colours, "inactive" );
	font-weight: 300;
	font-variation-settings: 'wght' 300;
}

pre {
	font-family: 'Fira Code',monospace;
	clear: both;
	color: #fff;
	background: #1b1b1b;
	padding: map.get( $spaces, "md" ) map.get( $spaces, "lg" );
	tab-size: 2;
	word-break: normal;
	hyphens: none;
	position: relative;
	line-height: 1.5;
	border-radius: map.get( $borderradius, "sm" );
	overflow: hidden;

	@media (max-width: 800px) {
		padding: map.get( $spaces, "sm" ) map.get( $spaces, "md" );
	}

	code {
		scrollbar-color: #666 #201c29;
		background: none;
		white-space: pre;
		-webkit-overflow-scrolling: touch;
		overflow-x: scroll;
		display: block;
		max-width: 100%;
		min-width: 100px;
		font-size: 16px;
		line-height: 1.5;
	}
}

code {
	font-family: 'Fira Code', monospace;
	font-size: inherit;
}
  
/* Code in text */
p > code,
li > code,
dd > code,
td > code {
	background: #ffeff0;
	word-wrap: break-word;
	box-decoration-break: clone;
	padding: .1rem .3rem .2rem;
	border-radius: map.get( $borderradius, "xs" );
}